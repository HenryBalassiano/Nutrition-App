{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","commonFoodName1","commonFoodName2","commonFoodName3","commonFoodName4","commonFoodName5","brandFoodName1","brandFoodName2","brandFoodName3","brandFoodName4","brandFoodName5","commonImage1","commonImage2","commonImage3","commonImage4","commonImage5","brandedImage1","brandedImage2","brandedImage3","brandedImage4","brandedImage5","foodData","setFoodData","nameForCommon","setNameforCommon","commonCalories1","commonCalories2","commonCalories3","commonCalories4","commonCalories5","commonGrams1","commonGrams2","commonGrams3","commonGrams4","commonGrams5","commonCalories","setCommonCalories","brandedCalories","brandedGrams","inputCalories","setInputCalories","inputGrams","setInputGrams","foodImg","setFoodImg","displayName","setDisplayName","Calories","setCalories","selection","useRef","localItem","vals","JSON","parse","localStorage","getItem","loc","setState","newItem","setItem","stringify","useLocalState","list","setlist","useEffect","length","document","getElementById","style","display","commonCalorieFunc1","a","fetch","method","headers","body","query","response","json","data","foods","nf_calories","serving_weight_grams","console","log","commonCalorieFunc2","commonCalorieFunc3","commonCalorieFunc4","commonCalorieFunc5","brandedCalorieFunc1","id1","brandedCalorieFunc2","id2","brandedCalorieFunc3","id3","brandedCalorieFunc4","id4","brandedCalorieFunc5","id5","requestCount","setRequestCount","send","value","common","food_name","branded","photo","thumb","nix_item_id","brandCompanyName1","brand_name","brandCompanyName2","brandCompanyName3","brandCompanyName4","brandCompanyName5","onLoadCitiesThrottle","useCallback","delay","fn","inDebounce","args","clearTimeout","setTimeout","debounce","id","placeholder","type","onChange","event","input","target","map","item","onClick","newList","filter","deleteItem","src","img","key","name","weight","calories","ref","Math","floor","e","random","slice","lists","push","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f1f6e71.chunk.js","sourcesContent":["import React, { useState,useCallback,useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [foodData, setFoodData] = useState({\ncommonFoodName1:'',\ncommonFoodName2:'',\ncommonFoodName3:'',\ncommonFoodName4:'',\ncommonFoodName5:'',\n\nbrandFoodName1:'',\nbrandFoodName2:'',\nbrandFoodName3:'',\nbrandFoodName4:'',\nbrandFoodName5:'',\n\ncommonImage1:'',\ncommonImage2:'',\ncommonImage3:'',\ncommonImage4:'',\ncommonImage5:'',\n\n\nbrandedImage1:'',\nbrandedImage2:'',\nbrandedImage3:'',\nbrandedImage4:'',\nbrandedImage5:'',\n\ncommonImage1:'',\ncommonImage2:'',\ncommonImage3:'',\ncommonImage4:'',\ncommonImage5:'',\n\nid1:'',\nid2:'',\nid3:'',\nid4:'',\nid5:'',\n\nbrandCompanyName1:'',\nbrandCompanyName2:'',\nbrandCompanyName3:'',\nbrandCompanyName4:'',\nbrandCompanyName5:'',\n    });\n\n\n\n    const [input, setInput] = useState('');\n    const [nameForCommon, setNameforCommon] = useState('');\n    const [nameForBrand, setNameforBrand] = useState('');\n\n\n\n    \n\n\n \n\n    const [commonCalories, setCommonCalories] = useState({\n      commonCalories1:'',\n      commonCalories2:'',\n      commonCalories3:'',\n      commonCalories4:'',\n      commonCalories5:'',\n\n\n      commonGrams1:'',\n      commonGrams2:'',\n      commonGrams3:'',\n      commonGrams4:'',\n      commonGrams5:'',\n\n\n    });\n\n\n\n    const [brandedCalories, setBrandedCalories] = useState({\n\nbrandedCalories:'',\n\nbrandedGrams:''\n\n    })\n \n\n\n\n\n\n\n\n\n    const [inputCalories, setInputCalories] = useState(0);\n    const [inputGrams, setInputGrams] = useState(0);\n    const [foodImg, setFoodImg] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [Calories, setCalories] = useState(0);\n\n  const selection = useRef();\n\n\n\n      \n  \n\n\n            function useLocalState(localItem) {\n        let vals = JSON.parse(localStorage.getItem(localItem))\n        if (vals === null) vals = []\n        const [loc,setState] = useState(vals)\n\n        function setLoc(newItem) {\n          localStorage.setItem(localItem, JSON.stringify(newItem))\n          setState(newItem)\n        }\n\n        return [loc,setLoc]\n      }\n              const [list, setlist] = useLocalState()  \n            const deleteItem = (id)=>{\n              const lists = [...list]\n            const newList = lists.filter(item => item.id !== id)\n            setlist(newList)\n            }\n\n          \n    \nuseEffect(()=>{\nif(list.length > 0){\n  document.getElementById('food-message').style.display='none'\n\n}\nelse{\n  document.getElementById('food-message').style.display='block'\n\n}\n\n\n})\n\n    \nconst commonCalorieFunc1= async function fetchCommonNutritionData1() {\n  document.getElementById('selection-box').style.display='block'\nsetNameforCommon(foodData.commonFoodName1)\n\nsetFoodImg(foodData.commonImage1)\n\nsetDisplayName(foodData.commonFoodName1)\n\n        try {\n          const response = await fetch(\n            \"https://trackapi.nutritionix.com/v2/natural/nutrients\",\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-app-id\": \"a0bb3cae\",\n                \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n              },\n              body: JSON.stringify({ query: foodData.commonFoodName1})\n            }\n          );\n\n          const data = await response.json();\nsetCommonCalories({\n\n  commonCalories1:data.foods[0].nf_calories,\n  commonGrams1:data.foods[0].serving_weight_grams\n})\n\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n\n\n      const commonCalorieFunc2= async function fetchCommonNutritionData2() {\n        document.getElementById('selection-box').style.display='block'\n      setNameforCommon(foodData.commonFoodName2)\n      setFoodImg(foodData.commonImage2)\n      setDisplayName(foodData.commonFoodName2)\n\n              try {\n                const response = await fetch(\n                  \"https://trackapi.nutritionix.com/v2/natural/nutrients\",\n                  {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      \"x-app-id\": \"a0bb3cae\",\n                      \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n                    },\n                    body: JSON.stringify({ query: foodData.commonFoodName2})\n                  }\n                );\n      \n                const data = await response.json();\n      setCommonCalories({\n      \n        commonCalories1:data.foods[0].nf_calories,\n        commonGrams1:data.foods[0].serving_weight_grams\n      })\n\n                \n              } catch (err) {\n                console.log(err);\n              }\n            }\n          \n            \n                \n                  const commonCalorieFunc3= async function fetchCommonNutritionData3() {\n                    document.getElementById('selection-box').style.display='block'\n                  setNameforCommon(foodData.commonFoodName3)\n                  setFoodImg(foodData.commonImage3)\n                  setDisplayName(foodData.commonFoodName3)\n\n\n                  \n                          try {\n                            const response = await fetch(\n                              \"https://trackapi.nutritionix.com/v2/natural/nutrients\",\n                              {\n                                method: \"POST\",\n                                headers: {\n                                  \"Content-Type\": \"application/json\",\n                                  \"x-app-id\": \"a0bb3cae\",\n                                  \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n                                },\n                                body: JSON.stringify({ query: foodData.commonFoodName3})\n                              }\n                            );\n                  \n                            const data = await response.json();\n                  setCommonCalories({\n                  \n                    commonCalories1:data.foods[0].nf_calories,\n                    commonGrams1:data.foods[0].serving_weight_grams\n                  })\n                  \n                            \n                          } catch (err) {\n                            console.log(err);\n                          }\n                        }\n                      \n                        const commonCalorieFunc4= async function fetchCommonNutritionDat4() {\n                          document.getElementById('selection-box').style.display='block'\n                        setNameforCommon(foodData.commonFoodName4)\n                        \n                        setFoodImg(foodData.commonImage4)\n                        setDisplayName(foodData.commonFoodName4)\n\n\n                                try {\n                                  const response = await fetch(\n                                    \"https://trackapi.nutritionix.com/v2/natural/nutrients\",\n                                    {\n                                      method: \"POST\",\n                                      headers: {\n                                        \"Content-Type\": \"application/json\",\n                                        \"x-app-id\": \"a0bb3cae\",\n                                        \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n                                      },\n                                      body: JSON.stringify({ query: foodData.commonFoodName4})\n                                    }\n                                  );\n                        \n                                  const data = await response.json();\n                        setCommonCalories({\n                        \n                          commonCalories1:data.foods[0].nf_calories,\n                          commonGrams1:data.foods[0].serving_weight_grams\n                        })\n                        \n                                  \n                                } catch (err) {\n                                  console.log(err);\n                                }\n                              }\n                            \n                                             \n                              const commonCalorieFunc5= async function fetchCommonNutritionData5() {\n                                document.getElementById('selection-box').style.display='block'\n                              setNameforCommon(foodData.commonFoodName5)\n                              \n                              setFoodImg(foodData.commonImage5)\n                              setDisplayName(foodData.commonFoodName5)\n\n\n                                      try {\n                                        const response = await fetch(\n                                          \"https://trackapi.nutritionix.com/v2/natural/nutrients\",\n                                          {\n                                            method: \"POST\",\n                                            headers: {\n                                              \"Content-Type\": \"application/json\",\n                                              \"x-app-id\": \"a0bb3cae\",\n                                              \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n                                            },\n                                            body: JSON.stringify({ query: foodData.commonFoodName5})\n                                          }\n                                        );\n                              \n                                        const data = await response.json();\n                              setCommonCalories({\n                              \n                                commonCalories1:data.foods[0].nf_calories,\n                                commonGrams1:data.foods[0].serving_weight_grams\n                              })\n                              \n                                        \n                                      } catch (err) {\n                                        console.log(err);\n                                      }\n                                    }\n\n   \n       const brandedCalorieFunc1=  async function fetchBrandedNutritionData1() {\n        document.getElementById('selection-box').style.display='block'\n        setNameforCommon(foodData.brandFoodName1)\n        setFoodImg(foodData.brandedImage1)\n        setDisplayName(foodData.brandFoodName1)\n\n\n        try {\n          const response = await fetch(\n            \"https://trackapi.nutritionix.com/v2/search/item?nix_item_id=\" + foodData.id1 +\n              \"\",\n            {\n              headers: {\n                \"x-app-id\": \"a0bb3cae\",\n                \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n              }\n            }\n          );\n\n          const data = await response.json();\n          setCommonCalories({\n                              \n            commonCalories1:data.foods[0].nf_calories,\n            commonGrams1:data.foods[0].serving_weight_grams\n          })\n          \n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n\n   \n    \n      const brandedCalorieFunc2=  async function fetchBrandedNutritionData2() {\n        document.getElementById('selection-box').style.display='block'\n        setNameforCommon(foodData.brandFoodName2)\n        setFoodImg(foodData.brandedImage2)\n        setDisplayName(foodData.brandFoodName2)\n\n\n        try {\n          const response = await fetch(\n            \"https://trackapi.nutritionix.com/v2/search/item?nix_item_id=\" + foodData.id2 +\n              \"\",\n            {\n              headers: {\n                \"x-app-id\": \"a0bb3cae\",\n                \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n              }\n            }\n          );\n\n          const data = await response.json();\n          setCommonCalories({\n                              \n            commonCalories1:data.foods[0].nf_calories,\n            commonGrams1:data.foods[0].serving_weight_grams\n          })\n          \n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n      const brandedCalorieFunc3=  async function fetchBrandedNutritionData3() {\n        document.getElementById('selection-box').style.display='block'\n        setNameforCommon(foodData.brandFoodName3)\n        setFoodImg(foodData.brandedImage3)\n        setDisplayName(foodData.brandFoodName3)\n\n\n        try {\n          const response = await fetch(\n            \"https://trackapi.nutritionix.com/v2/search/item?nix_item_id=\" + foodData.id3 +\n              \"\",\n            {\n              headers: {\n                \"x-app-id\": \"a0bb3cae\",\n                \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n              }\n            }\n          );\n\n          const data = await response.json();\n          setCommonCalories({\n                              \n            commonCalories1:data.foods[0].nf_calories,\n            commonGrams1:data.foods[0].serving_weight_grams\n          })\n          \n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n      const brandedCalorieFunc4=  async function fetchBrandedNutritionData4() {\n        document.getElementById('selection-box').style.display='block'\n        setNameforCommon(foodData.brandFoodName4)\n        setFoodImg(foodData.brandedImage4)\n        setDisplayName(foodData.brandFoodName4)\n\n\n        try {\n          const response = await fetch(\n            \"https://trackapi.nutritionix.com/v2/search/item?nix_item_id=\" + foodData.id4 +\n              \"\",\n            {\n              headers: {\n                \"x-app-id\": \"a0bb3cae\",\n                \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n              }\n            }\n          );\n\n          const data = await response.json();\n          setCommonCalories({\n                              \n            commonCalories1:data.foods[0].nf_calories,\n            commonGrams1:data.foods[0].serving_weight_grams\n          })\n          \n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n      const brandedCalorieFunc5=   async function fetchBrandedNutritionData5() {\n        document.getElementById('selection-box').style.display='block'\n        setNameforCommon(foodData.brandFoodName5)\n        setFoodImg(foodData.brandedImage5)\n        setDisplayName(foodData.brandFoodName5)\n\n\n        try {\n          const response = await fetch(\n            \"https://trackapi.nutritionix.com/v2/search/item?nix_item_id=\" + foodData.id5 +\n              \"\",\n            {\n              headers: {\n                \"x-app-id\": \"a0bb3cae\",\n                \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n              }\n            }\n          );\n\n          const data = await response.json();\n          setCommonCalories({\n                              \n            commonCalories1:data.foods[0].nf_calories,\n            commonGrams1:data.foods[0].serving_weight_grams\n          })\n          \n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n\n\nconst debounce = (delay, fn) => {\n  let inDebounce = null;\n  return args => {\n    clearTimeout(inDebounce);\n    inDebounce = setTimeout(() => fn(args), delay);\n  };\n};\n\n  const ref = useRef(null);\n  const [requestCount, setRequestCount] = useState(0);\n\n  const send = async value => {\n    try {\n      const response = await fetch(\n        \"https://trackapi.nutritionix.com/v2/search/instant?query=\" +\n          value +\n          \"\",\n        {\n          headers: {\n            \"x-app-id\": \"a0bb3cae\",\n            \"x-app-key\": \"6c1221ffc2243a7f81280a386b27989c\"\n          }\n        }\n      );\n      document.getElementById(\"common\").style.display = \"block\";\nif(value === ''){\n\n  document.getElementById(\"common\").style.display = \"none\";\n}\n\n      const data = await response.json();\n\n      setFoodData({\n        commonFoodName1:data.common[0].food_name,\n        commonFoodName2:data.common[1].food_name,\n        commonFoodName3:data.common[2].food_name,\n        commonFoodName4:data.common[3].food_name,\n        commonFoodName5:data.common[4].food_name,\n\n         brandFoodName1:data.branded[0].food_name,\n         brandFoodName2:data.branded[1].food_name,\n         brandFoodName3:data.branded[2].food_name,\n         brandFoodName4:data.branded[3].food_name,\n         brandFoodName5:data.branded[4].food_name,\n\n          brandedImage1:data.branded[0].photo.thumb,\n          brandedImage2:data.branded[1].photo.thumb,\n          brandedImage3:data.branded[2].photo.thumb,\n          brandedImage4:data.branded[3].photo.thumb,\n          brandedImage5:data.branded[4].photo.thumb,\n\n          commonImage1:data.common[0].photo.thumb,\n          commonImage2:data.common[1].photo.thumb,\n          commonImage3:data.common[2].photo.thumb,\n          commonImage4:data.common[3].photo.thumb,\n          commonImage5:data.common[4].photo.thumb,\n          \n          id1: data.branded[0].nix_item_id,\n          id2: data.branded[1].nix_item_id,\n          id3: data.branded[2].nix_item_id,\n          id4: data.branded[3].nix_item_id,\n          id5: data.branded[4].nix_item_id,\n          \n          brandCompanyName1:data.branded[0].brand_name,\n          brandCompanyName2:data.branded[1].brand_name,\n          brandCompanyName3:data.branded[2].brand_name,\n          brandCompanyName4:data.branded[3].brand_name,\n          brandCompanyName5:data.branded[4].brand_name,\n\n\n\n      });\n   \n     } catch {\n    } finally {\n      setRequestCount(requestCount + 1);\n    }\n\n  }\n  const onLoadCitiesThrottle = useCallback(debounce(500, send), []);\n    \n    \n\n\n\n\n  return (\n    <div >\n      <div id='dim'>\n      <div id='input' >\n   <input placeholder = 'Search For Food..' type='text' onChange={(event)=>{\n\n  \n        const input = event.target.value;\n        onLoadCitiesThrottle(input);\n        \n }} /></div></div>\n <div id='calorie-track'>\n <p>You have consumed {Calories} calories</p></div>\n\n <p id='food-message'> You have not logged anything yet..</p>\n <div id='diary'>\n   \n {list.map(item => {\n        return(\n          <div>\n          <div  id ='parents'>         \n           <button id='deleteFood' onClick={() => deleteItem(item.id)  }> X </button>\n    \n              <img id='imgForList' src = {item.img}/>\n<div id='food-parent'>\n  \n      <h3 id='nameForFood'\n       key={item.id}> {item.name} </h3> \n       <p id='food-weight'>({item.weight} g) </p>    \n       \n        <p id='calories-diary'>{item.calories} cal</p>\n</div>          \n\n       </div>\n<hr id='hr'/></div>\n\n\n        )\n      })}</div><div id=\"dimmer\"></div>\n\n  <div id='common-parent'>\n<div id='common'> \n<ul>\n\n<h4>Common</h4>\n <p id='button1'onClick={commonCalorieFunc1} >{foodData.commonFoodName1}</p> <img id='img'src={foodData.commonImage1}/>\n  <p id='button2'onClick={commonCalorieFunc2}  >{foodData.commonFoodName2}</p><img id='img' src={foodData.commonImage2}/>\n  <p id='button3' onClick={commonCalorieFunc3}>{foodData.commonFoodName3}</p><img id='img'src={foodData.commonImage3}/>\n  <p id='button4'onClick={commonCalorieFunc4}>{foodData.commonFoodName4}</p><img id='img'src={foodData.commonImage4}/>\n  <p id='button5'onClick={commonCalorieFunc5}>{foodData.commonFoodName5}</p><img id='img'src={foodData.commonImage5}/>\n  <h4>Branded</h4>\n\n  <p id='button6' onClick={brandedCalorieFunc1}>{foodData.brandFoodName1} \n    </p> <img id='img' src={foodData.brandedImage1}/><p id='brand-company1'>{foodData.brandCompanyName1}</p>\n  <p id='button7' onClick={brandedCalorieFunc2}>{foodData.brandFoodName2}</p><img id='img' src={foodData.brandedImage2}/><p id='brand-company1'>{foodData.brandCompanyName2}</p>\n  <p id='button8' onClick={brandedCalorieFunc3}>{foodData.brandFoodName3}</p><img id='img'src={foodData.brandedImage3}/><p id='brand-company1'>{foodData.brandCompanyName3}</p>\n  <p id='button9'onClick={brandedCalorieFunc4}>{foodData.brandFoodName4}</p><img id='img' src={foodData.brandedImage4}/><p id='brand-company1'>{foodData.brandCompanyName4}</p>\n  <p id='button10'onClick={brandedCalorieFunc5}>{foodData.brandFoodName5}</p><img id='img'src={foodData.brandedImage5}/><p id='brand-company1'>{foodData.brandCompanyName5}</p>\n\n</ul></div>\n<div id='selection-box' ref={selection}>\n  <div id='img-name'>\n  <img id ='display-img'src ={foodImg}/>\n  <h4 id='item-name'>\n    {nameForCommon}\n  </h4></div>\n  <hr id='line-break'/>\n  <div id='food-measurments'>  <span>Calories</span>\n\n  <h4 id='calories'>{Math.floor(inputCalories*  commonCalories.commonCalories1)}</h4>\n  <span id='span-gram'>Grams</span>\n   <h4 id='grams'> \n    {Math.floor(inputGrams * commonCalories.commonGrams1)}\n  </h4></div>\n  <button id='selection-button'onClick={()=>{\n    document.getElementById('selection-box').style.display='none'\n\n  }}>X</button>\n<div>\n  <input placeholder='quanity'id ='quanity-box'type ='number'onChange={ (e)=>{\nvar input = e.target.value\nsetInputGrams((input ))\n\nsetInputCalories((input ))\n  }\n  }></input>\n  <button id='add' onClick={ ()=>{\n        const newItem={\n                id: 1 + Math.random(),\n                name: displayName.slice(),\n                img:foodImg,\n                weight:Math.floor(inputCalories *commonCalories.commonGrams1),\n                calories: Math.floor(commonCalories.commonCalories1 * inputCalories)\n\n        }\n        setCalories(newItem.calories + Calories)\n     \n        \n\n        const lists = [...list]\n       \n        lists.push(newItem)\n        setlist(lists)\n        document.getElementById('selection-box').style.display='none'\n        document.getElementById('common').style.display='none'\n\n      \n    }}>add</button></div>\n  </div>   \n</div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}